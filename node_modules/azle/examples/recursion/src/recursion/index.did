type rec_37 = func (rec_37) -> (rec_37) query;
type rec_38 = func (rec_38) -> (rec_38) query;
type rec_39 = func (rec_39) -> (rec_39) query;
type rec_10 = opt rec_10;
type rec_11 = opt rec_11;
type rec_12 = opt record {rec_12; rec_12};
type rec_13 = opt record {rec_13; rec_13};
type rec_8 = opt variant {Leaf:int8; Branch:rec_8};
type rec_9 = opt variant {Leaf:int8; Branch:rec_9};
type rec_14 = opt vec rec_14;
type rec_15 = opt vec rec_15;
type rec_16 = record {myOpt:opt rec_16};
type rec_17 = record {myOpt:opt rec_17};
type rec_28 = record {myOpt:opt rec_28};
type rec_20 = record {myVar:variant {num:int8; varRec:rec_20}};
type rec_21 = record {myVar:variant {num:int8; varRec:rec_21}};
type rec_30 = record {myVar:variant {num:int8; varRec:rec_30}};
type rec_18 = record {myVecRecords:vec rec_18};
type rec_19 = record {myVecRecords:vec rec_19};
type rec_29 = record {myVecRecords:vec rec_29};
type rec_42 = service {getMessage: () -> (text) query; myQuery: (rec_42) -> (rec_42) query;};
type rec_43 = service {getMessage: () -> (text) query; myQuery: (rec_43) -> (rec_43) query;};
type rec_45 = service {getMessage: () -> (text) query; myQuery: (rec_45) -> (rec_45) query;};
type rec_46 = service {getMessage: () -> (text) query; myQuery: (rec_46) -> (rec_46) query;};
type rec_44 = service {getMessage: () -> (text) query; myQuery: (rec_44) -> (rec_44) query;};
type rec_40 = service {myQuery: (rec_40) -> (rec_40) query;};
type rec_41 = service {myQuery: (rec_41) -> (rec_41) query;};
type rec_24 = record {opt rec_24; opt rec_24};
type rec_25 = record {opt rec_25; opt rec_25};
type rec_32 = record {opt rec_32; opt rec_32};
type rec_34 = record {variant {num:int8; varTuple:rec_34}; variant {num:int8; varTuple:rec_34}};
type rec_35 = record {variant {num:int8; varTuple:rec_35}; variant {num:int8; varTuple:rec_35}};
type rec_36 = record {variant {num:int8; varTuple:rec_36}; variant {num:int8; varTuple:rec_36}};
type rec_26 = record {vec rec_26; vec rec_26};
type rec_27 = record {vec rec_27; vec rec_27};
type rec_33 = record {vec rec_33; vec rec_33};
type rec_22 = variant {num:int8; recVariant:rec_22};
type rec_23 = variant {num:int8; recVariant:rec_23};
type rec_31 = variant {num:int8; recVariant:rec_31};
type rec_2 = vec opt rec_2;
type rec_3 = vec opt rec_3;
type rec_4 = vec record {rec_4; rec_4};
type rec_5 = vec record {rec_5; rec_5};
type rec_0 = vec variant {Leaf:int8; Branch:rec_0};
type rec_1 = vec variant {Leaf:int8; Branch:rec_1};
type rec_6 = vec rec_6;
type rec_7 = vec rec_7;
service: () -> {
    testRecFunc: (rec_37) -> (rec_38) query;
    testRecFuncReturn: () -> (rec_39) query;
    testRecOptWithOpt: (rec_10) -> (rec_11) query;
    testRecOptWithTuple: (rec_12) -> (rec_13) query;
    testRecOptWithVariant: (rec_8) -> (rec_9) query;
    testRecOptWithVec: (rec_14) -> (rec_15) query;
    testRecRecordWithOpt: (rec_16) -> (rec_17) query;
    testRecRecordWithOptReturn: () -> (rec_28) query;
    testRecRecordWithVariant: (rec_20) -> (rec_21) query;
    testRecRecordWithVariantReturn: () -> (rec_30) query;
    testRecRecordWithVec: (rec_18) -> (rec_19) query;
    testRecRecordWithVecReturn: () -> (rec_29) query;
    testRecService: (rec_42) -> (rec_43) query;
    testRecServiceCall: (rec_45) -> (rec_46);
    testRecServiceReturn: () -> (rec_44) query;
    testRecServiceSimple: (rec_40) -> (rec_41) query;
    testRecTupleWithOpt: (rec_24) -> (rec_25) query;
    testRecTupleWithOptReturn: () -> (rec_32) query;
    testRecTupleWithVariant: (rec_34) -> (rec_35) query;
    testRecTupleWithVariantReturn: () -> (rec_36) query;
    testRecTupleWithVec: (rec_26) -> (rec_27) query;
    testRecTupleWithVecReturn: () -> (rec_33) query;
    testRecVariant: (rec_22) -> (rec_23) query;
    testRecVariantReturn: () -> (rec_31) query;
    testRecVecWithOpt: (rec_2) -> (rec_3) query;
    testRecVecWithTuple: (rec_4) -> (rec_5) query;
    testRecVecWithVariant: (rec_0) -> (rec_1) query;
    testRecVecWithVec: (rec_6) -> (rec_7) query;
}
